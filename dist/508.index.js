/*! For license information please see 508.index.js.LICENSE.txt */
export const __webpack_esm_id__=508;export const __webpack_esm_ids__=[508];export const __webpack_esm_modules__={93508:(e,t,r)=>{r.d(t,{XWing:()=>g});var i=r(38619),a=r(24220);const n=BigInt(1),s=BigInt(2),y=BigInt(3),h=BigInt(5),o=BigInt("0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffed");function c(e){return e[0]&=248,e[31]&=127,e[31]|=64,e}const w=(()=>{const e=o;return(0,a.EC)({P:e,type:"x25519",powPminus2:t=>{const{pow_p_5_8:r,b2:i}=function(e){const t=BigInt(10),r=BigInt(20),i=BigInt(40),y=BigInt(80),c=o,w=e*e%c*e%c,l=(0,a.zH)(w,s,c)*w%c,u=(0,a.zH)(l,n,c)*e%c,f=(0,a.zH)(u,h,c)*u%c,b=(0,a.zH)(f,t,c)*f%c,d=(0,a.zH)(b,r,c)*b%c,p=(0,a.zH)(d,i,c)*d%c,v=(0,a.zH)(p,y,c)*p%c,g=(0,a.zH)(v,y,c)*p%c,_=(0,a.zH)(g,t,c)*f%c;return{pow_p_5_8:(0,a.zH)(_,s,c)*e%c,b2:w}}(t);return(0,a.zi)((0,a.zH)(r,y,e)*i,e)},adjustScalarBytes:c})})();class l extends a.o0{async extract(e,t){if(await this._setup(),0===e.byteLength&&(e=new ArrayBuffer(this.hashSize)),e.byteLength!==this.hashSize)return(0,a.w8)(a.sc,new Uint8Array(e),new Uint8Array(t)).buffer;const r=await this._api.importKey("raw",e,this.algHash,!1,["sign"]);return await this._api.sign("HMAC",r,t)}}const u="X25519";class f{constructor(e){Object.defineProperty(this,"_hkdf",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"_nPk",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"_nSk",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),this._hkdf=e,this._nPk=32,this._nSk=32}async serializePublicKey(e){try{return await this._serializePublicKey(e)}catch(e){throw new a.LV(e)}}async deserializePublicKey(e){try{return await this._importRawKey(e,!0)}catch(e){throw new a.Ug(e)}}async serializePrivateKey(e){try{return await this._serializePrivateKey(e)}catch(e){throw new a.LV(e)}}async deserializePrivateKey(e){try{return await this._importRawKey(e,!1)}catch(e){throw new a.Ug(e)}}async importKey(e,t,r){try{if("raw"===e)return await this._importRawKey(t,r);if(t instanceof ArrayBuffer)throw new Error("Invalid jwk key format");return await this._importJWK(t,r)}catch(e){throw new a.Ug(e)}}async generateKeyPair(){try{const e=await w.utils.randomSecretKey(),t=new a.Bk(u,e,"private",a.xE);return{publicKey:await this.derivePublicKey(t),privateKey:t}}catch(e){throw new a.EM(e)}}async deriveKeyPair(e){try{const t=await this._hkdf.labeledExtract(a.wg.buffer,a.CY,new Uint8Array(e)),r=await this._hkdf.labeledExpand(t,a.Hz,a.wg,this._nSk),i=new a.Bk(u,new Uint8Array(r),"private",a.xE);return{privateKey:i,publicKey:await this.derivePublicKey(i)}}catch(e){throw new a.$7(e)}}async derivePublicKey(e){try{return await this._derivePublicKey(e)}catch(e){throw new a.Ug(e)}}async dh(e,t){try{return await this._dh(e,t)}catch(e){throw new a.LV(e)}}async derive(e,t){try{return await this._derive(e,t)}catch(e){throw new a.LV(e)}}_serializePublicKey(e){return new Promise(t=>{t(e.key.buffer)})}_serializePrivateKey(e){return new Promise(t=>{t(e.key.buffer)})}_importRawKey(e,t){return new Promise((r,i)=>{t&&e.byteLength!==this._nPk&&i(new Error("Invalid length of the key")),t||e.byteLength===this._nSk||i(new Error("Invalid length of the key")),r(new a.Bk(u,new Uint8Array(e),t?"public":"private",t?[]:a.xE))})}_importJWK(e,t){return new Promise((r,i)=>{void 0!==e.kty&&"OKP"===e.kty||i(new Error(`Invalid kty: ${e.kty}`)),void 0!==e.crv&&"X25519"===e.crv||i(new Error(`Invalid crv: ${e.crv}`)),t?(void 0!==e.d&&i(new Error("Invalid key: `d` should not be set")),void 0===e.x&&i(new Error("Invalid key: `x` not found")),r(new a.Bk(u,(0,a.rf)(e.x),"public"))):("string"!=typeof e.d&&i(new Error("Invalid key: `d` not found")),r(new a.Bk(u,(0,a.rf)(e.d),"private",a.xE)))})}_derivePublicKey(e){return new Promise((t,r)=>{try{const r=w.getPublicKey(e.key);t(new a.Bk(u,r,"public"))}catch(e){r(e)}})}_dh(e,t){return new Promise((r,i)=>{try{r(w.getSharedSecret(e.key,t.key).buffer)}catch(e){i(e)}})}_derive(e,t){return new Promise((r,i)=>{try{r(w.getSharedSecret(e,t))}catch(e){i(e)}})}}a.gX;const b="X-Wing",d=new Uint8Array([9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),p=new Uint8Array([92,46,47,47,94,92]);function v(e,t,r,a){const n=new Uint8Array(e.length+t.length+r.length+a.length+p.length);return n.set(e,0),n.set(t,e.length),n.set(r,e.length+t.length),n.set(a,e.length+t.length+r.length),n.set(p,e.length+t.length+r.length+a.length),i.C2.create().update(n).digest()}class g{constructor(){Object.defineProperty(this,"id",{enumerable:!0,configurable:!0,writable:!0,value:a.h.XWing}),Object.defineProperty(this,"name",{enumerable:!0,configurable:!0,writable:!0,value:b}),Object.defineProperty(this,"secretSize",{enumerable:!0,configurable:!0,writable:!0,value:32}),Object.defineProperty(this,"encSize",{enumerable:!0,configurable:!0,writable:!0,value:1120}),Object.defineProperty(this,"publicKeySize",{enumerable:!0,configurable:!0,writable:!0,value:1216}),Object.defineProperty(this,"privateKeySize",{enumerable:!0,configurable:!0,writable:!0,value:32}),Object.defineProperty(this,"auth",{enumerable:!0,configurable:!0,writable:!0,value:!1}),Object.defineProperty(this,"_m",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"_x25519",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"_api",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),this._m=new i.wo,this._x25519=new f(new l)}async serializePublicKey(e){await this._setup();try{return await this._serializePublicKey(e)}catch(e){throw new a.LV(e)}}async deserializePublicKey(e){await this._setup();try{return await this._deserializePublicKey(e)}catch(e){throw new a.Ug(e)}}async serializePrivateKey(e){await this._setup();try{return await this._serializePrivateKey(e)}catch(e){throw new a.LV(e)}}async deserializePrivateKey(e){await this._setup();try{return await this._deserializePrivateKey(e)}catch(e){throw new a.Ug(e)}}async generateKeyPair(){await this._setup();const e=new Uint8Array(32);try{this._api.getRandomValues(e)}catch(e){throw new a.EM(e)}try{const[t,r]=await this._generateKeyPairDerand(e);return{privateKey:await this.deserializePrivateKey(e.buffer),publicKey:await this.deserializePublicKey(r.buffer)}}catch(e){throw new a.$7(e)}}async generateKeyPairDerand(e){if(32!==e.byteLength)throw new a.NS("Invalid length of sk");try{const[t,r]=await this._generateKeyPairDerand(e);return{privateKey:await this.deserializePrivateKey(e.buffer),publicKey:await this.deserializePublicKey(r.buffer)}}catch(e){throw new a.$7(e)}}async deriveKeyPair(e){await this._setup();try{const t=i.mh.create({dkLen:32}).update(new Uint8Array(e)).digest(),[r,a]=await this._generateKeyPairDerand(t);return{privateKey:await this.deserializePrivateKey(t.buffer),publicKey:await this.deserializePublicKey(a.buffer)}}catch(e){throw new a.$7(e)}}async importKey(e,t,r=!0){await this._setup();try{let i;if("jwk"===e){if(t instanceof ArrayBuffer||t instanceof Uint8Array)throw new Error("Invalid jwk key format");i=await this._importJWK(t,r)}else if(t instanceof ArrayBuffer)i=new Uint8Array(t);else{if(!(t instanceof Uint8Array))throw new Error("Invalid key format");i=t}if(r&&i.byteLength!==this.publicKeySize)throw new Error("Invalid length of the key");if(!r&&i.byteLength!==this.privateKeySize)throw new Error("Invalid length of the key");return new a.Bk(b,i,r?"public":"private",r?[]:a.xE)}catch(e){throw new a.Ug(e)}}async encap(e){let t,r,i;if(void 0!==e.ekm&&!(0,a.Di)(e.ekm)){if(64!==e.ekm.byteLength)throw new a.NS("ekm must be 64 bytes in length");t=e.ekm}if(void 0!==t){const e=new Uint8Array(t);r=e.subarray(0,32),i=e.subarray(32,64)}else{i=new Uint8Array(32);try{this._api.getRandomValues(i)}catch(e){throw new a.EM(e)}}const n=new Uint8Array(await this.serializePublicKey(e.recipientPublicKey));if(1216!==n.byteLength)throw new a.NS("Invalid length of recipientPublicKey");await this._setup();try{const e=n.subarray(0,1184),t=n.subarray(1184,1216),s=await this._x25519.derive(i,d),y=await this._x25519.derive(i,t),[h,o]=await this._m.encap(e,r);return{sharedSecret:v(o,y,s,t).buffer,enc:(0,a.xW)(h,s).buffer}}catch(e){throw new a.Wg(e)}}async decap(e){const t=(0,a.Di)(e.recipientKey)?e.recipientKey.privateKey:e.recipientKey;if(1120!==e.enc.byteLength)throw new a.NS("Invalid length of enc");const r=new Uint8Array(await this.serializePrivateKey(t));if(32!==r.byteLength)throw new a.NS("Invalid length of recipientKey");await this._setup();try{const[t,i,a,n]=await this._expandDecapsulationKey(r),s=new Uint8Array(e.enc),y=s.subarray(0,1088),h=s.subarray(1088);return v(await this._m.decap(y,t),await this._x25519.derive(i,h),h,n).buffer}catch(e){throw new a.uu(e)}}async _setup(){void 0===this._api&&(this._api=await(0,a.QZ)())}async _generateKeyPairDerand(e){const[t,r,i,n]=await this._expandDecapsulationKey(e);return[e,(0,a.xW)(i,n)]}async _expandDecapsulationKey(e){const t=i.mh.create({dkLen:96}).update(e).digest(),[r,a]=await this._m.deriveKeyPair(t.subarray(0,64)),n=t.subarray(64,96);return[a,n,r,await this._x25519.derive(n,d)]}_serializePublicKey(e){return new Promise((t,r)=>{"public"!==e.type&&r(new Error("Not public key")),e.algorithm.name!==this.name&&r(new Error(`Invalid algorithm name: ${e.algorithm.name}`)),e.key.byteLength!==this.publicKeySize&&r(new Error(`Invalid key length: ${e.key.byteLength}`)),t(e.key.buffer)})}_deserializePublicKey(e){return new Promise((t,r)=>{e.byteLength!==this.publicKeySize&&r(new Error(`Invalid key length: ${e.byteLength}`)),t(new a.Bk(this.name,new Uint8Array(e),"public"))})}_serializePrivateKey(e){return new Promise((t,r)=>{"private"!==e.type&&r(new Error("Not private key")),e.algorithm.name!==this.name&&r(new Error(`Invalid algorithm name: ${e.algorithm.name}`)),e.key.byteLength!==this.privateKeySize&&r(new Error(`Invalid key length: ${e.key.byteLength}`)),t(e.key.buffer)})}_deserializePrivateKey(e){return new Promise((t,r)=>{e.byteLength!==this.privateKeySize&&r(new Error(`Invalid key length: ${e.byteLength}`)),t(new a.Bk(this.name,new Uint8Array(e),"private",["deriveBits"]))})}_importJWK(e,t){return new Promise((r,i)=>{void 0!==e.kty&&"AKP"===e.kty||i(new Error(`Invalid kty: ${e.kty}`)),void 0!==e.alg&&e.alg===b||i(new Error(`Invalid alg: ${e.alg}`)),t||(void 0===e.priv&&i(new Error("Invalid key: `priv` not found")),void 0===e.key_ops||1===e.key_ops.length&&"deriveBits"===e.key_ops[0]||i(new Error("Invalid key: `key_ops` should be ['deriveBits']")),r((0,a.rf)(e.priv))),void 0!==e.priv&&i(new Error("Invalid key: `priv` should not be set")),void 0===e.pub&&i(new Error("Invalid key: `pub` not found")),void 0!==e.key_ops&&e.key_ops.length>0&&i(new Error("Invalid key: `key_ops` should not be set")),r((0,a.rf)(e.pub))})}}}};